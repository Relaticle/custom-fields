name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  validate:
    runs-on: ubuntu-latest
    name: Validate Release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.3
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd

      - name: Cache Composer packages
        uses: actions/cache@v4
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-php-release-${{ hashFiles('**/composer.lock') }}

      - name: Install Composer dependencies
        run: composer install --prefer-dist --no-interaction --no-progress --optimize-autoloader --no-dev

      - name: Validate composer.json
        run: composer validate --strict

      - name: Run full test suite
        run: |
          composer install --dev
          composer run test

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Build frontend assets
        run: |
          npm ci
          npm run build

  create-release:
    needs: validate
    runs-on: ubuntu-latest
    name: Create Release

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          if [ -f CHANGELOG.md ]; then
            # Extract changes for current version from CHANGELOG.md
            awk '/^## \[${{ steps.version.outputs.VERSION }}\]/{flag=1; next} /^## \[/{flag=0} flag' CHANGELOG.md > current_changes.md
            if [ -s current_changes.md ]; then
              echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
              cat current_changes.md >> $GITHUB_OUTPUT
              echo "EOF" >> $GITHUB_OUTPUT
            else
              echo "CHANGELOG=Release ${{ steps.version.outputs.VERSION }}" >> $GITHUB_OUTPUT
            fi
          else
            echo "CHANGELOG=Release ${{ steps.version.outputs.VERSION }}" >> $GITHUB_OUTPUT
          fi

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.version.outputs.VERSION }}
          body: ${{ steps.changelog.outputs.CHANGELOG }}
          draft: false
          prerelease: ${{ contains(steps.version.outputs.VERSION, '-') }}

  notify:
    needs: [validate, create-release]
    runs-on: ubuntu-latest
    name: Notify Release
    if: always()

    steps:
      - name: Release notification
        run: |
          if [ "${{ needs.create-release.result }}" = "success" ]; then
            echo "✅ Release ${{ github.ref_name }} created successfully!"
          else
            echo "❌ Release creation failed!"
            exit 1
          fi